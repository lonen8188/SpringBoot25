plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.7'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'org.mbc'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    /* 메이븐 리포지토리에서 코드를 가져와 코끼리를 누르면 가져온다. */

    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf' /* 프론트 관련 */
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:3.1.0' /* 프론트 레이아웃 관련*/

    implementation 'org.springframework.boot:spring-boot-starter-web'       /* string-web */
    compileOnly 'org.projectlombok:lombok'                                  /* 롬북 */
    annotationProcessor 'org.projectlombok:lombok'                          /* 롬북 */
    testCompileOnly 'org.projectlombok:lombok'                              /* 롬북 */
    testAnnotationProcessor 'org.projectlombok:lombok'                      /* 롬북 */

    developmentOnly 'org.springframework.boot:spring-boot-devtools'         /* boot 개발용 */

    /* 1단계 2단계 설정 -> src/main/resources/application.properties 에서 설정함 */
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'  /* 데이터 베이스 관련*/
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'                      /* 마리아 db 드라이버 */

    testImplementation 'org.springframework.boot:spring-boot-starter-test'  /* 테스트 junit 메서드 단위 테스트 */
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'            /* junit용 코드 */
}

tasks.named('test') {
    useJUnitPlatform()
}
