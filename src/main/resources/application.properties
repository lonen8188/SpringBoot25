##톰켓 관련 설정 및 데이베이스 관련 설정
spring.application.name=board

##http://192.168.111.105:80
server.port=80

##로그 출력 설정
logging.level.org.springframework=info
logging.level.org.mbc=debug

##데이터베이스 1,2단계 설정
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.datasource.url=jdbc:mariadb://localhost:3306/bootex
spring.datasource.username=bootuser
spring.datasource.password=bootuser

##jpa 관련 설정 추가(jpa : orm에서 시작되었다.) 데이터베이스도 객체형으로 보자

spring.jpa.hibernate.ddl-auto=update
##update : 기존과 다른 테이블이 검증되면 drop 후 create 한다.
##none : 테이블 구조를 변경하지 않는다.
##create : 실행할 때마다 테이블을 새로 만든다.
##create-drop : 실행할 때 테이블을 새로 만들고 종료할 때 drop
##validate : 변경된 부분만 콘솔만 알려줌(구조 변경 안 함)
spring.jpa.properties.hibernate.format_sql=true
##콘솔에 sql 쿼리문을 보여줌
spring.jpa.show-sql=true
##jpa가 하는 일을 보여줌

##CREATE DATABASE `bootex` /*!40100 COLLATE 'utf8_general_ci' */;
#SHOW DATABASES;

##CREATE USER 'bootuser'@'%' IDENTIFIED BY 'bootuser';
#GRANT USAGE ON *.* TO 'bootuser'@'%';
#GRANT EXECUTE, SELECT, SHOW VIEW, ALTER, ALTER ROUTINE, CREATE, CREATE ROUTINE, CREATE TEMPORARY TABLES, CREATE VIEW, DELETE, DROP, EVENT, INDEX, INSERT, REFERENCES, TRIGGER, UPDATE, LOCK TABLES  ON `bootex`.* TO 'bootuser'@'%' WITH GRANT OPTION;
#FLUSH PRIVILEGES;
